// Copyright 2024 Scape Agency BV

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


@use "../variables" as *;




// Mixins for Media Queries Based on Device Orientation
// ============================================================================
// These mixins provide a convenient way to apply styles based on the orientation of the device.
// Useful for responsive designs that need to adapt to landscape or portrait modes, especially on tablets and smartphones.

/// Mixin for landscape orientation with optional breakpoint
/// Use this mixin to apply styles when the device is in landscape mode.
/// @param $min-width (optional) - The minimum width at which the styles should apply
/// Example usage:
/// @include orientation-landscape(1024px) { /* styles */ }
@mixin orientation-landscape($min-width: null) {
    @if $min-width {
        @media (orientation: landscape) and (min-width: $min-width) {
            @content;
        }
    } @else {
        @media (orientation: landscape) {
            @content; // The styles inside this mixin are applied in landscape mode
        }
    }
}

/// Mixin for portrait orientation with optional breakpoint
/// Use this mixin to apply styles when the device is in portrait mode.
/// @param $min-width (optional) - The minimum width at which the styles should apply
/// Example usage:
/// @include orientation-portrait { /* styles */ }
@mixin orientation-portrait($min-width: null) {
    @if $min-width {
        @media (orientation: portrait) and (min-width: $min-width) {
            @content;
        }
    } @else {
        @media (orientation: portrait) {
            @content;
        }
    }
}



/// Mixin for targeting specific aspect ratios
/// @param $width - Width of the aspect ratio
/// @param $height - Height of the aspect ratio
// @mixin aspect-ratio($width, $height) {
//     @media (aspect-ratio: #{$width}/#{$height}) {
//         @content;
//     }
// }




// Mixin for High-Density (Retina) Displays
// ============================================================================
/// This mixin targets high-density displays like Retina screens.
/// It covers various methods to detect high pixel density to ensure broad compatibility.
/// Usage: 
/// @include retina { /* styles for retina displays */ }
@mixin retina {
    // Webkit-based browsers
    @media only screen and (-webkit-min-device-pixel-ratio: 2),
           // Standard way to target high-resolution displays
           only screen and (min-resolution: 192dpi),
           // For devices with a high-resolution in dots per inch
           only screen and (min-resolution: 2dppx) {
        @content; // Styles for high-density displays
    }
}
