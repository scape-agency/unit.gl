// Copyright 2023 Scape Agency BV

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


// ============================================================================
// Base | Unit
// ============================================================================

@use 'sass:math';


// Kyū Measurement System for Responsive Typography
// $q-base: Base size of a Kyū, set to 1/16th of a Rem.
// $q-sizes: Map of Kyū sizes for various design needs (xs, sm, md, lg, xl).
// --q-<size>: CSS custom properties representing Kyū sizes.
// fluid-font-size mixin: Applies fluid typography using Kyū sizes.


// Kyū base size definition
// A Kyū is 1/16th of a Rem
$q_base: 0.0625rem !default;
$q: 0.0625rem !default;
$q_unit: 1.0000rem !default;
// $q_unit: rem !default;
// @if $q_unit != rem and $q_unit != px {
//   @error "`#{$q_unit}` is not a valid unit for $q_unit. Use `px` or `rem`.";
// }

// Define a range of Kyū sizes for responsive design
$q-sizes: (
  xs: 0.5 * $q-base,  // Extra Small
  sm: 1 * $q-base,    // Small
  md: 2 * $q-base,    // Medium
  lg: 3 * $q-base,    // Large
  xl: 4 * $q-base     // Extra Large
) !default;



:root {
    --q: $q;
}



$q_min: 0.75px !default;
$q_max: 1.50px !default;
$q_dif: calc($q_max - $q_min);

$font_min: calc(($q_unit / $q) * $q_min) !default;
$font_max: calc(($q_unit / $q) * $q_max) !default;